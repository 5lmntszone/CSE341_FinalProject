{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Club API",
    "version": "1.0.0",
    "description": "API documentation for the Book Club application"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "List books",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Case-insensitive title search"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "author",
                "publishedYear",
                "createdAt"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid query parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "author"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "genre": {
                    "type": "string"
                  },
                  "publishedYear": {
                    "type": "integer"
                  },
                  "ISBN": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "coverImage": {
                    "type": "string",
                    "format": "uri"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by ID",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64b5d2fbcf1c8b0012a1a456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid bookId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update a book",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64b5d2fbcf1c8b0012a1a456"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "genre": {
                    "type": "string"
                  },
                  "publishedYear": {
                    "type": "integer"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "coverImage": {
                    "type": "string",
                    "format": "uri"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid path/body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64b5d2fbcf1c8b0012a1a456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted"
          },
          "400": {
            "description": "Bad request (invalid bookId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "List reviews (optionally filter by bookId)",
        "parameters": [
          {
            "in": "query",
            "name": "bookId",
            "schema": {
              "type": "string"
            },
            "description": "Filter reviews for a specific book"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid query parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a review",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bookId",
                  "userName",
                  "rating"
                ],
                "properties": {
                  "bookId": {
                    "type": "string"
                  },
                  "userName": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{reviewId}": {
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Delete a review",
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review deleted"
          },
          "400": {
            "description": "Bad request (invalid reviewId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "required": [
          "title",
          "author"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "example": "The Pragmatic Programmer"
          },
          "author": {
            "type": "string",
            "example": "Andrew Hunt, David Thomas"
          },
          "genre": {
            "type": "string",
            "example": "Software Engineering"
          },
          "summary": {
            "type": "string",
            "example": "A guide to pragmatic software craftsmanship."
          },
          "publishedYear": {
            "type": "integer",
            "example": 1999
          },
          "ISBN": {
            "type": "string",
            "example": "978-0201616224"
          },
          "coverImage": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/covers/pragmatic.jpg"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "nonfiction",
              "software",
              "classic"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Validation error"
          },
          "errors": {
            "type": "array",
            "description": "List of validation issues",
            "items": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "bookId must be a valid MongoId"
                },
                "param": {
                  "type": "string",
                  "example": "bookId"
                },
                "location": {
                  "type": "string",
                  "example": "body"
                }
              }
            }
          }
        }
      },
      "ServerErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal server error"
          },
          "details": {
            "type": "string",
            "example": "Unexpected database error"
          }
        }
      },
      "Review": {
        "type": "object",
        "required": [
          "bookId",
          "userName",
          "rating"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "bookId": {
            "type": "string",
            "example": "64b5d2fbcf1c8b0012a1a456"
          },
          "userName": {
            "type": "string",
            "example": "barbara"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "example": 5
          },
          "comment": {
            "type": "string",
            "example": "Loved the pacing and characters."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": []
}